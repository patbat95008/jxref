head	1.76;
access;
symbols;
locks;
comment	@# @;


1.76
date	2014.02.15.21.58.19;	author -;	state -;
branches;
next	1.75;

1.75
date	2014.02.15.21.46.11;	author -;	state -;
branches;
next	1.74;

1.74
date	2014.02.15.21.45.55;	author -;	state -;
branches;
next	1.73;

1.73
date	2014.02.15.21.45.29;	author -;	state -;
branches;
next	1.72;

1.72
date	2014.02.15.21.43.58;	author -;	state -;
branches;
next	1.71;

1.71
date	2014.02.15.21.40.54;	author -;	state -;
branches;
next	1.70;

1.70
date	2014.02.15.21.34.12;	author -;	state -;
branches;
next	1.69;

1.69
date	2014.02.15.21.19.49;	author -;	state -;
branches;
next	1.68;

1.68
date	2014.02.15.21.18.08;	author -;	state -;
branches;
next	1.67;

1.67
date	2014.02.15.21.15.57;	author -;	state -;
branches;
next	1.66;

1.66
date	2014.02.15.21.10.25;	author -;	state -;
branches;
next	1.65;

1.65
date	2014.02.15.21.02.47;	author -;	state -;
branches;
next	1.64;

1.64
date	2014.02.15.20.59.20;	author -;	state -;
branches;
next	1.63;

1.63
date	2014.02.15.20.55.31;	author -;	state -;
branches;
next	1.62;

1.62
date	2014.02.15.20.51.50;	author -;	state -;
branches;
next	1.61;

1.61
date	2014.02.15.20.51.31;	author -;	state -;
branches;
next	1.60;

1.60
date	2014.02.15.20.51.09;	author -;	state -;
branches;
next	1.59;

1.59
date	2014.02.15.20.45.05;	author -;	state -;
branches;
next	1.58;

1.58
date	2014.02.15.20.32.36;	author -;	state -;
branches;
next	1.57;

1.57
date	2014.02.15.20.18.48;	author -;	state -;
branches;
next	1.56;

1.56
date	2014.02.15.18.37.31;	author -;	state -;
branches;
next	1.55;

1.55
date	2014.02.15.18.30.09;	author -;	state -;
branches;
next	1.54;

1.54
date	2014.02.13.23.07.05;	author -;	state -;
branches;
next	1.53;

1.53
date	2014.02.13.22.58.25;	author -;	state -;
branches;
next	1.52;

1.52
date	2014.02.13.22.57.38;	author -;	state -;
branches;
next	1.51;

1.51
date	2014.02.13.22.56.38;	author -;	state -;
branches;
next	1.50;

1.50
date	2014.02.13.22.37.21;	author -;	state -;
branches;
next	1.49;

1.49
date	2014.02.13.22.28.45;	author -;	state -;
branches;
next	1.48;

1.48
date	2014.02.13.22.26.47;	author -;	state -;
branches;
next	1.47;

1.47
date	2014.02.13.21.42.11;	author -;	state -;
branches;
next	1.46;

1.46
date	2014.02.13.21.37.01;	author -;	state -;
branches;
next	1.45;

1.45
date	2014.02.13.21.36.44;	author -;	state -;
branches;
next	1.44;

1.44
date	2014.02.13.20.37.24;	author -;	state -;
branches;
next	1.43;

1.43
date	2014.02.13.20.35.03;	author -;	state -;
branches;
next	1.42;

1.42
date	2014.02.13.20.32.34;	author -;	state -;
branches;
next	1.41;

1.41
date	2014.02.13.20.31.15;	author -;	state -;
branches;
next	1.40;

1.40
date	2014.02.13.20.29.33;	author -;	state -;
branches;
next	1.39;

1.39
date	2014.02.13.20.26.06;	author -;	state -;
branches;
next	1.38;

1.38
date	2014.02.13.20.20.11;	author -;	state -;
branches;
next	1.37;

1.37
date	2014.02.13.20.19.22;	author -;	state -;
branches;
next	1.36;

1.36
date	2014.02.13.20.15.32;	author -;	state -;
branches;
next	1.35;

1.35
date	2014.02.13.19.04.53;	author -;	state -;
branches;
next	1.34;

1.34
date	2014.02.13.18.27.22;	author -;	state -;
branches;
next	1.33;

1.33
date	2014.02.13.05.55.48;	author -;	state -;
branches;
next	1.32;

1.32
date	2014.02.13.03.58.08;	author -;	state -;
branches;
next	1.31;

1.31
date	2014.02.13.03.57.31;	author -;	state -;
branches;
next	1.30;

1.30
date	2014.02.13.03.56.32;	author -;	state -;
branches;
next	1.29;

1.29
date	2014.02.13.03.55.54;	author -;	state -;
branches;
next	1.28;

1.28
date	2014.02.13.03.55.15;	author -;	state -;
branches;
next	1.27;

1.27
date	2014.02.13.03.52.47;	author -;	state -;
branches;
next	1.26;

1.26
date	2014.02.13.03.51.45;	author -;	state -;
branches;
next	1.25;

1.25
date	2014.02.13.03.51.08;	author -;	state -;
branches;
next	1.24;

1.24
date	2014.02.13.03.50.54;	author -;	state -;
branches;
next	1.23;

1.23
date	2014.02.13.03.48.47;	author -;	state -;
branches;
next	1.22;

1.22
date	2014.02.13.03.46.58;	author -;	state -;
branches;
next	1.21;

1.21
date	2014.02.13.03.46.36;	author -;	state -;
branches;
next	1.20;

1.20
date	2014.02.13.03.44.16;	author -;	state -;
branches;
next	1.19;

1.19
date	2014.02.13.03.42.12;	author -;	state -;
branches;
next	1.18;

1.18
date	2014.02.13.03.41.18;	author -;	state -;
branches;
next	1.17;

1.17
date	2014.02.13.03.38.47;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.02.13.03.36.17;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.02.13.03.34.52;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.02.13.03.34.12;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.02.13.03.33.17;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.02.13.03.31.40;	author -;	state -;
branches;
next	1.11;

1.11
date	2014.02.13.03.31.05;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.02.13.03.30.07;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.02.13.03.28.06;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.02.13.03.26.59;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.02.13.03.26.26;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.02.13.03.24.53;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.02.13.03.23.58;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.02.13.03.23.36;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.02.13.03.23.02;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.02.13.00.03.43;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.01.17.01.44.47;	author -;	state -;
branches;
next	;


desc
@@


1.76
log
@-
@
text
@// Patrick Russell pcrussel
//
// $Id: jxref.java,v 1.75 2014-02-15 13:46:11-08 - - $

import java.io.*;
import java.util.Scanner;
import static java.lang.System.*;

class jxref {
   static final String STDIN_NAME = "-";

   static class printer implements visitor <String, queue <Integer>> {
      public void visit (String key, queue <Integer> value) {
         out.printf ("%s", key);
         //for (int linenr: value) out.printf (" %d", linenr);
         out.printf ("%n");
      }
   }

   static void xref_file (String filename, Scanner scan, boolean isDebug,
                          boolean ignoreCaps) {
      treemap <String, queue <Integer>> map =
            new treemap <String, queue <Integer>> ();
      queue<Integer> lineNum = new queue <Integer> ();
      for (int linenr = 1; scan.hasNextLine (); ++linenr) {
         //lineNum.insert(linenr);
         for (String word: scan.nextLine().split ("\\W+")) {
            if (word.matches ("^\\d*$")) continue;
               
               map.put(word, lineNum, ignoreCaps);
               
         }
      }
      
      if(isDebug) map.debug_dump();
      visitor <String, queue <Integer>> print_fn = new printer ();
      if(!isDebug) map.do_visit (print_fn);
   }

   public static void main (String[] args) {
      String command;
      boolean isDebug = false;//debug dump (-d)
      boolean ignoreCaps = false;//merge cases (-f)
      int fileNameStart = 0;//if there's a command, don't try
                            //to read it as a filename
      if(args.length > 0) command = args[0];
 
      if (args.length > 1 && args[0].startsWith("-")){
         if (args[0].contains("d")){
            isDebug = true;
         }
         if (args[0].contains("f")){
            ignoreCaps = true;
         }
         fileNameStart = 1;
      }

      if (args.length == 0) {
         xref_file (STDIN_NAME, new Scanner (in),
                    isDebug, ignoreCaps);
      }else {
         for (int argi = fileNameStart; argi < args.length; ++argi) {
            String filename = args[argi];
            if (filename.equals (STDIN_NAME)) {
               xref_file (STDIN_NAME, new Scanner (in), 
                          isDebug, ignoreCaps);
            }else {
               try {
                  Scanner scan = new Scanner (new File (filename));
                  xref_file (filename, scan, isDebug, ignoreCaps);
                  scan.close ();
               }catch (IOException error) {
                  auxlib.warn (error.getMessage ());
               }
            }
         }
      }
      auxlib.exit ();
   }

}

@


1.75
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.74 2014-02-15 13:45:55-08 - - $
d37 1
a37 1
      map.do_visit (print_fn);
@


1.74
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.73 2014-02-15 13:45:29-08 - - $
d14 1
a14 1
         out.printf ("%s %s", key,);
@


1.73
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.72 2014-02-15 13:43:58-08 - - $
d14 1
a14 1
         out.printf ("%s %s", key, value);
@


1.72
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.71 2014-02-15 13:40:54-08 - - $
d15 1
a15 1
         for (int linenr: value) out.printf (" %d", linenr);
@


1.71
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.70 2014-02-15 13:34:12-08 - - $
d26 1
a26 1
         lineNum.insert(linenr);
@


1.70
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.69 2014-02-15 13:19:49-08 - - $
d26 1
a26 1
         //lineNum.insert(linenr);
d29 1
a29 1
               lineNum.insert(linenr);
d31 1
a31 1
               lineNum.itor.remove();
@


1.69
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.68 2014-02-15 13:18:08-08 - - $
d20 2
a21 1
   static void xref_file (String filename, Scanner scan) {
d29 3
a31 3
               if(lineNum != null) lineNum.insert(linenr);
               lineNum = map.put(word, lineNum);
               if(lineNum != null) lineNum.insert(linenr);
d35 1
a35 1
      map.debug_dump();
d59 2
a60 1
         xref_file (STDIN_NAME, new Scanner (in));
d65 2
a66 1
               xref_file (STDIN_NAME, new Scanner (in));
d70 1
a70 1
                  xref_file (filename, scan);
@


1.68
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.67 2014-02-15 13:15:57-08 - - $
d28 1
a28 1
               lineNum.insert(linenr);
@


1.67
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.66 2014-02-15 13:10:25-08 - - $
d28 1
d30 1
a30 1
               lineNum.insert(linenr);
@


1.66
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.65 2014-02-15 13:02:47-08 - - $
d28 2
a29 1
               map.put(word, lineNum);
@


1.65
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.64 2014-02-15 12:59:20-08 - - $
d28 1
a28 1
           lineNum.insert(map.put(word, lineNum));
@


1.64
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.63 2014-02-15 12:55:31-08 - - $
d25 1
a25 1
         lineNum.insert(linenr);
d28 1
a28 1
            map.put(word, lineNum);
@


1.63
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.62 2014-02-15 12:51:50-08 - - $
d25 1
a27 2
            lineNum.insert(linenr);
            //out.printf ("%s: %d: %s%n", filename, linenr, word);
@


1.62
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.61 2014-02-15 12:51:31-08 - - $
d15 1
a15 1
         for (int linenr: value) out.printf (" asdf %d", linenr);
@


1.61
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.60 2014-02-15 12:51:09-08 - - $
d23 1
a23 1
      queue<Integer> lineNum = new queue <Integer>;
@


1.60
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.59 2014-02-15 12:45:05-08 - - $
d23 1
a23 1
      queue<Integer> lineNum = new queue <Integer>
@


1.59
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.58 2014-02-15 12:32:36-08 - - $
d23 1
d27 1
@


1.58
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.57 2014-02-15 12:18:48-08 - - $
a22 1
      queue<Integer> lineNum = new queue<Integer> ();
@


1.57
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.56 2014-02-15 10:37:31-08 - - $
d15 1
a15 1
         for (int linenr: value) out.printf (" %d", linenr);
@


1.56
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.55 2014-02-15 10:30:09-08 - - $
d27 1
a27 1
            out.printf ("%s: %d: %s%n", filename, linenr, word);
@


1.55
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.54 2014-02-13 15:07:05-08 - - $
d41 2
a42 1
      int fileNameStart = 0;
@


1.54
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.53 2014-02-13 14:58:25-08 - - $
d33 2
a34 2
     // visitor <String, queue <Integer>> print_fn = new printer ();
     // map.do_visit (print_fn);
@


1.53
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.52 2014-02-13 14:57:38-08 - - $
d23 1
d28 1
@


1.52
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.51 2014-02-13 14:56:38-08 - - $
d29 1
a29 1
      out.printf("we got to this point");
d31 2
a32 2
      visitor <String, queue <Integer>> print_fn = new printer ();
      map.do_visit (print_fn);
@


1.51
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.50 2014-02-13 14:37:21-08 - - $
d29 1
@


1.50
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.49 2014-02-13 14:28:45-08 - - $
d29 1
@


1.49
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.48 2014-02-13 14:26:47-08 - - $
a41 1
            out.printf("lol it works");
@


1.48
log
@-
@
text
@d3 1
a3 1
// $Id: jxref.java,v 1.1 2014-01-16 17:44:47-08 - - $
d38 1
a38 1

d40 1
a40 1
      if (args.length() > 1 && args[0].startsWith("-")){
@


1.47
log
@-
@
text
@d3 1
a3 35
// Name:
//    jxref
//
// Synopsis:
//    jxref [-df] [filename...]
//
// Description:
//    Each file is read in sequence and a printout of the words
//    found in the file is generated at the end of each file,
//    one word per line, followed by a list of line numbers
//    where the word occurred. All normal output is sent to
//    stdout. Error messages are printed to stderr
//
// Options:
//    -d Tree is dumped in debug format, showing each key along
//       with its level in the tree
//    -f Upper case letters are folded into lower case before
//       insertion into the binary search tree
//
// Operands:
//     Each operand is a filename, each file causing to be
//     created a new tree. If any filename is specified 
//     as a minus sign (-), stdin is read at that point.
//     If no filenames are specified, stdin is read. As
//     an output filename, the minus sign is used as the
//     name of stdin.
//
// Exit Status:
//    0 No errors
//
//    1 Errors occurred, either in scanning options 
//      or opening files
//
// $Id: jxref.java,v 1.46 2014-02-13 13:37:01-08 - - $
//
a22 2
      queue lineNum = new queue <Integer> ();
      queue foundLine = new queue <Integer>();
d26 1
a26 3
           lineNum.insert(linenr);
           foundLine = map.put(word, lineNum);
           out.printf ("%s: %d: %s%n", filename, linenr, word);
d29 2
a30 3
      map.debug_dump();
      //visitor <String, queue <Integer>> print_fn = new printer ();
      //map.do_visit (print_fn);
d34 10
a43 25
      boolean isDebug = false;//tongles debug mode(-d)
      boolean ignoreCase = false;//tongles ignore case(-f)
      String command = null;//the command string
      int filenameStart = 0;//where the files actually start

      if (args.length > 1 && args[0].startsWith("-")){
          command = (String)args[0];
      }

      //if the first argument starts with a minus,
      //it is a command
      if (command != null){
        
         //used .contains so that any order of
         //d and f can be used as long as they
         //begin with a minus sign
         if (command.contains("d")){
           isDebug = true;
           //out.printf("debugmode = on\n");
           filenameStart = 1;
         }
         if(command.contains("f")){
           ignoreCase = true;
           //out.printf("ignorecase = on\n");
           filenameStart = 1;
d45 2
a46 2
         if(!command.contains("d") && !command.contains("f")){
           out.printf("stupid, that's not a command\n");
d48 1
a49 1
      
d54 1
a54 1
         for (int argi = filenameStart; argi < args.length; ++argi) {
a55 1
            //skip over filenames
@


1.46
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.45 2014-02-13 13:36:44-08 - - $
d63 1
a63 1
           foundLine = map.put(map.getRoot(), word, lineNum);
@


1.45
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.44 2014-02-13 12:37:24-08 - - $
d69 1
a69 1
      map.do_visit (print_fn);
@


1.44
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.43 2014-02-13 12:35:03-08 - - $
d68 1
a68 1
      visitor <String, queue <Integer>> print_fn = new printer ();
@


1.43
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.42 2014-02-13 12:32:34-08 - - $
d62 1
a62 1
          // lineNum.insert(linenr);
@


1.42
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.41 2014-02-13 12:31:15-08 - - $
d58 1
a58 1
      String foundWord = null;
d63 1
a63 1
           foundWord = (String)map.put(map.getRoot(), word, lineNum);
@


1.41
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.40 2014-02-13 12:29:33-08 - - $
d63 1
a63 1
           foundWord = map.put(map.getRoot(), word, lineNum);
@


1.40
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.39 2014-02-13 12:26:06-08 - - $
d58 1
d63 1
a63 1
           map = map.put(map.getRoot(), word, lineNum);
@


1.39
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.38 2014-02-13 12:20:11-08 - - $
d62 1
a62 1
           map.put(map.getRoot(), word, lineNum);
@


1.38
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.37 2014-02-13 12:19:22-08 - - $
d61 1
a61 1
           lineNum.insert(linenr);
@


1.37
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.36 2014-02-13 12:15:32-08 - - $
d62 1
a62 1
           map.put(map.root, word, lineNum);
@


1.36
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.35 2014-02-13 11:04:53-08 - - $
d57 1
d61 2
a62 1
           map.put(map.root, word, linenr);
@


1.35
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.34 2014-02-13 10:27:22-08 - - $
d60 1
a60 1
            
d64 1
@


1.34
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.33 2014-02-12 21:55:48-08 - - $
d61 1
a61 1
            //out.printf ("%s: %d: %s%n", filename, linenr, word);
@


1.33
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.32 2014-02-12 19:58:08-08 - - $
d60 2
a61 1
            out.printf ("%s: %d: %s%n", filename, linenr, word);
@


1.32
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.31 2014-02-12 19:57:31-08 - - $
d70 2
a71 2
      String command = null;
      int filenameStart = 0;
a74 1
          //filenameStart = 1;
d86 1
a86 1
           out.printf("debugmode = on");
d91 1
a91 1
           out.printf("ignorecase = on");
@


1.31
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.30 2014-02-12 19:56:32-08 - - $
d73 1
a73 1
      if (args.length > 2 && args[0].startsWith("-")){
@


1.30
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.29 2014-02-12 19:55:54-08 - - $
d73 2
a74 2
      if (args.length > 2 && args[1].startsWith("-")){
          command = (String)args[1];
@


1.29
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.28 2014-02-12 19:55:15-08 - - $
d73 2
a74 2
      if (args.length > 2 && args[0].startsWith("-")){
          command = (String)args[0];
@


1.28
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.27 2014-02-12 19:52:47-08 - - $
d73 2
a74 2
      if (args.length > 2 && args[1].startsWith('-')){
          command = (String)args[1];
@


1.27
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.26 2014-02-12 19:51:45-08 - - $
d73 1
a73 1
      if (args.length > 1){
@


1.26
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.25 2014-02-12 19:51:08-08 - - $
d81 1
a81 1
        if(command.contains("-")){
d99 1
a99 1
      }
@


1.25
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.24 2014-02-12 19:50:54-08 - - $
d81 1
a81 1
        if(command.startsWith("-")){
@


1.24
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.23 2014-02-12 19:48:47-08 - - $
d81 1
a81 1
        if(command.startsWith("-"){
@


1.23
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.22 2014-02-12 19:46:58-08 - - $
d81 1
d99 1
@


1.22
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.21 2014-02-12 19:46:36-08 - - $
d73 1
a73 1
      if (args.length > 1 && args[1].startsWith("-")){
d75 1
a75 1
          filenameStart = 1;
d80 1
a80 1
      if (command != null && command.startsWith("-")){
d87 1
d92 1
@


1.21
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.20 2014-02-12 19:44:16-08 - - $
d73 1
a73 1
      if (args.length > 1 && (String)args[1].startsWith("-")){
@


1.20
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.19 2014-02-12 19:42:12-08 - - $
d73 1
a73 1
      if (args.length > 1){
@


1.19
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.18 2014-02-12 19:41:18-08 - - $
d80 1
a80 1
      if (command != null){
@


1.18
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.17 2014-02-12 19:38:47-08 - - $
d75 1
a86 1
           filenameStart = 1;
@


1.17
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.16 2014-02-12 19:36:17-08 - - $
d71 2
d86 1
d92 1
a92 1
         if(!command.contains("d") || !command.contains("f")){
d100 1
a100 1
         for (int argi = 0; argi < args.length; ++argi) {
a102 1
            if (filename.startsWith("-")) argi++;
@


1.16
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.15 2014-02-12 19:34:52-08 - - $
d83 1
d87 3
a89 1
         }else{
@


1.15
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.14 2014-02-12 19:34:12-08 - - $
d71 2
a72 2
      if (args.length >= 1){
          command = (String)args[22];
d77 1
a77 1
      if (command.startsWith("-")){
@


1.14
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.13 2014-02-12 19:33:17-08 - - $
d72 1
a72 1
          command = (String)args[1];
@


1.13
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.12 2014-02-12 19:31:40-08 - - $
d70 1
d72 1
a72 1
         String command = (String)args[1];
@


1.12
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.11 2014-02-12 19:31:05-08 - - $
d70 1
a70 1
      if (args.length() >= 1){
@


1.11
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.10 2014-02-12 19:30:07-08 - - $
d71 1
a71 1
         String command = (String)args[];
@


1.10
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.9 2014-02-12 19:28:06-08 - - $
d70 3
a72 1
      if(args.length() >= 1) String command = (String)args[];
@


1.9
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.8 2014-02-12 19:26:59-08 - - $
d70 1
a70 2
      String command = "-asdf";
//(String)args[];
@


1.8
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.7 2014-02-12 19:26:26-08 - - $
d70 2
a71 1
      String command = (String)args[2];
@


1.7
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.6 2014-02-12 19:24:53-08 - - $
d70 1
a70 1
      String command = (String)args[0];
@


1.6
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.5 2014-02-12 19:23:58-08 - - $
d70 1
a70 1
      String command = (String)args[1];
@


1.5
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.4 2014-02-12 19:23:36-08 - - $
d84 1
a84 1
           auxlib.warn (error.getMessage());
@


1.4
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.3 2014-02-12 19:23:02-08 - - $
d94 1
a94 1
            if (filename.startsWith("-") argi++;
@


1.3
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.2 2014-02-12 16:03:43-08 - - $
d74 1
a74 1
      if (command.startsWith("-"){
d78 1
a78 1
         if (command.contains("d"){
d81 1
a81 1
         if(command.contains("f"){
@


1.2
log
@-
@
text
@d36 1
a36 1
// $Id: jxref.java,v 1.1 2014-01-16 17:44:47-08 - - $
d68 20
d93 2
@


1.1
log
@-
@
text
@d1 37
a37 1
// $Id: jxref.java,v 1.1 2011-01-28 19:50:37-08 - - $
@
